{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "CakeML",
  "patterns": [
    {"include": "#decls"},
    {"include": "#type-exprs"},
    {"include": "#operators"},
    {"include": "#symbols"},
    {"include": "#keywords"},
    {"include": "#comments"},
    {"include": "#literals"},
    {"include": "#constructors"},
    {"include": "#constants"}],
  "repository": {

    "symbols": {
      "patterns": [{
        "name": "keyword.control.cakeml",
        "match": "(=>|\\||\\:|\\;)"
      }]
    },

    "type-exprs": {
      "patterns": [
        {"name": "support.type.type-expr.cakeml",
         "match": "\\b(?<=[^\\.])(unit|bool|int|rat|char|string|option|list|map|ordering)\\b"
        },
        {"name": "keyword.operator.type-expr.cakeml",
         "match": "->"
        }
      ]
    },

    "binders": {
      "patterns": [
        {"include": "#explicit-binders"},
        {"include": "#implicit-binders"},
        {"name": "constant.language.value.cakeml",
         "match": "\\(\\)"
        }
      ]
    },
    "implicit-binders": {
      "name": "variable.parameter.cakeml",
      "match": "\\b[a-z]\\w*\\b"
    },
    "explicit-binders": {
      "begin": "\\(([a-z]\\w*)\\s*(\\:)",
      "end": "\\)",
      "beginCaptures": {
        "1": {"name": "variable.parameter.cakeml"},
        "2": {"name": "keyword.control.cakeml"}
      },
      "include": "#type-exprs"
    },    

    "decls": {
      "patterns": [
        {"include": "#fun-decls"},
        {"include": "#fun-and-decls"},
        {"include": "#val-decls"},
        {"include": "#type-decls"},
        {"include": "#datatype-decls"},
        {"include": "#datatype-and-decls"}
      ]
    },
    "fun-decls": {
      "begin": "\\b(fun)\\s+([a-z]\\w*)\\b",
      "end": "(=)",
      "beginCaptures": {
        "1": {"name": "storage.type.cakeml"},
        "2": {"name": "entity.name.function.cakeml"}
      },
      "endCaptures": {
        "1": {"name": "keyword.control.cakeml"}
      },
      "patterns": [{
        "include": "#binders"
      }]
    },
    "fun-and-decls": {
      "begin": "\\b(and)\\s+([a-z]\\w*)\\b",
      "end": "(=)",
      "beginCaptures": {
        "1": {"name": "storage.type.cakeml"},
        "2": {"name": "entity.name.function.cakeml"}
      },
      "endCaptures": {
        "1": {"name": "keyword.control.cakeml"}
      },
      "patterns": [{
        "include": "#binders"
      }]
    },
    "val-decls": {
      "patterns": [
        {"match": "\\b(val)\\s+([a-z]\\w*)\\s*(=)",
         "captures": {
           "1": {"name": "storage.type.cakeml"},
           "2": {"name": "entity.name.function.cakeml"},
           "3": {"name": "keyword.control.cakeml"}
         }
        },
        {"match": "\\b(val)\\s+(\\(\\))\\s*(=)",
         "captures": {
           "1": {"name": "storage.type.cakeml"},
           "2": {"name": "constant.language.value.cakeml"},
           "3": {"name": "keyword.control.cakeml"}
         }
        },
        {"match": "\\b(val)\\s+_\\s*(=)",
         "captures": {
           "1": {"name": "storage.type.cakeml"},
           "2": {"name": "keyword.control.cakeml"}
         }
        }
      ]
    },
    "type-decls": {
      "begin": "\\b(type)\\s+([a-z]\\w*)\\b",
      "end": "(=)",
      "beginCaptures": {
        "1": {"name": "storage.type.cakeml"},
        "2": {"name": "entity.name.function.cakeml"}
      },
      "endCaptures": {
        "1": {"name": "keyword.control.cakeml"}
      },
      "patterns": [{
        "include": "#implicit-binders"
      }]
    },
    "datatype-decls": {
      "patterns": [
        {"match": "\\b(datatype)\\s+(?:('[a-z]\\w*)\\s+)?([a-z]\\w*)\\s*(=)",
         "captures": {
           "1": {"name": "storage.type.cakeml"},
           "2": {"name": "variable.parameter.cakeml"},
           "3": {"name": "entity.name.function.cakeml"},
           "4": {"name": "keyword.control.cakeml"}
         }
        },
        {"match": "\\b(datatype)\\s*(\\()\\s*(?:('[a-z]\\w*)\\s*(\\,)\\s*)+('[a-z]\\w*)\\s*(\\))\\s*([a-z]\\w*)\\s*(=)",
         "captures": {
           "1": {"name": "storage.type.cakeml"},
           "2": {"name": "keyword.control.cakeml"},
           "3": {"name": "variable.parameter.cakeml"},
           "4": {"name": "keyword.control.cakeml"},
           "5": {"name": "variable.parameter.cakeml"},
           "6": {"name": "keyword.control.cakeml"},
           "7": {"name": "entity.name.function.cakeml"},
           "8": {"name": "keyword.control.cakeml"}
         }
        }
      ]
    },
    "datatype-and-decls": {
      "patterns": [
        {"match": "\\b(and)\\s+(?:('[a-z]\\w*)\\s+)?([a-z]\\w*)\\s*(=)",
         "captures": {
           "1": {"name": "storage.type.cakeml"},
           "2": {"name": "variable.parameter.cakeml"},
           "3": {"name": "entity.name.function.cakeml"},
           "4": {"name": "keyword.control.cakeml"}
         }
        },
        {"match": "\\b(and)\\s*(\\()\\s*(?:('[a-z]\\w*)\\s*(\\,)\\s*)+('[a-z]\\w*)\\s*(\\))\\s*([a-z]\\w*)\\s*(=)",
         "captures": {
           "1": {"name": "storage.type.cakeml"},
           "2": {"name": "keyword.control.cakeml"},
           "3": {"name": "variable.parameter.cakeml"},
           "4": {"name": "keyword.control.cakeml"},
           "5": {"name": "variable.parameter.cakeml"},
           "6": {"name": "keyword.control.cakeml"},
           "7": {"name": "entity.name.function.cakeml"},
           "8": {"name": "keyword.control.cakeml"}
         }
        }
      ]
    },

    "keywords": {
      "patterns": [{
        "name": "keyword.control.cakeml",
        "match": "\\b(fn|let|local|in|end|if|then|else|case|of|structure|struct|exception|handle|raise|op)\\b"
      }]
    },

    "comments": {
      "name": "comment.block.cakeml",
      "begin": "\\(\\*",
      "end": "\\*\\)"
    },

    "literals": {
      "patterns": [
        {"include": "#strings"},
        {"include": "#decimals"},
        {"include": "#hexadecimals"},
        {"include": "#ffi-funcs"}
      ]
    },
    "strings": {
      "name": "string.quoted.double.cakeml",
      "begin": "#?\"",
      "end": "\"",
      "patterns": [{
     	  "name": "constant.character.escape.cakeml",
          "match": "\\\\."
      }]
    },
    "decimals": {
      "patterns": [{
        "name": "constant.numeric.decimal.cakeml",
        "match": "\\b\\d+\\b"
      }]
    },
    "hexadecimals": {
      "patterns": [{
        "name": "constant.numeric.hexadecimal.cakeml",
        "match": "\\b0x\\h+\\b"
      }]
    },
    "ffi-funcs": {
      "name": "constant.language.cakeml",
      "match": "#\\([^\\)]*\\)"
    },

    "operators": {
      "patterns": [{
        "name": "keyword.operator.cakeml",
        "match": "(\\+|\\-|\\~|\\*|\\/|\\bdiv\\b|\\bmod\\b|\\borelse\\b|\\bandalso\\b|\\=|\\<\\>|\\<\\=|\\>\\=|\\<|\\>|\\bo\\b|\\-\\>|\\^|\\@|:\\=|\\!|\\>\\>|\\<\\<|\\~\\>\\>|\\[|\\,|\\]|::)"
      }]
    },

    "constructors": {
      "name": "constant.language.constructor.cakeml",
      "match": "\\b[A-Z]\\w*\\b"
    },

    "constants": {
      "name": "constant.language.value.cakeml",
      "match": "\\(\\)"
    }

  },
  "scopeName": "source.cakeml"
}